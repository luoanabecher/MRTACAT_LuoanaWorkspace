{"queryset": {"version": "1.0.0", "dataSources": [{"id": "9b5ce950-fa6c-44b2-8772-071ec8866823", "clusterUri": "https://trd-d9cz8fyxuwx6dhmxf8.z9.kusto.fabric.microsoft.com", "type": "Fabric", "databaseItemId": "776ee9bf-9c0c-432b-9205-9d6b82d58528", "databaseItemName": "ZavaEventHouse"}], "tabs": [{"id": "e5b672f7-f0ec-4045-a8ef-4bdd49b272f5", "content": "// This KQL query was generated by AI:\n// remove the milliseconds\n//\nSensorData\n| summarize latestEventProcessedUtcTime=max(EventProcessedUtcTime)\n| extend latestEventProcessedUtcTimePacific = datetime_utc_to_local(latestEventProcessedUtcTime, 'US/Pacific')\n| extend latestEventProcessedUtcTimePacificRounded = bin(latestEventProcessedUtcTimePacific, 1s)\n| extend latestEventProcessedUtcTimePacificRounded = format_datetime(latestEventProcessedUtcTimePacificRounded, 'yyyy-MM-dd HH:mm:ss')\n| project latestEventProcessedUtcTimePacificRounded\n\nSensorData\n| extend latestEventProcessedUtcTime=ingestion_time()\n| extend latestEventProcessedUtcTimePacific = datetime_utc_to_local(latestEventProcessedUtcTime, 'US/Pacific')\n| extend latestEventProcessedUtcTimePacificRounded = format_datetime(latestEventProcessedUtcTimePacific, 'yyyy-MM-dd HH:mm:ss')\n| project latestEventProcessedUtcTimePacificRounded\n| top 1 by latestEventProcessedUtcTimePacificRounded desc\n\n\n\n\n\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "1f24d7c7-20af-4185-ad00-cd6a1f59383e", "content": "\n// This KQL query was generated by AI:\n// create a line chart of all temperature sensor values over time\n//\nSensorData\n| join kind=inner Sensors on sensorId\n| join kind=inner external_table('product') on productId\n| extend EventDateTime = datetime_utc_to_local(EventProcessedUtcTime, 'US/Pacific')\n| where EventDateTime > datetime_utc_to_local(ago(1h),'US/Pacific') \n| where unit has \"C\"\n| where productType == \"Footwear\"\n| project EventDateTime, sensorValue, sensorId,productId\n| extend sensorValueReal = todouble(sensorValue)\n| summarize avgTemperature=avg(sensorValueReal) by bin(EventDateTime, 1s),sensorId,productId\n//| render timechart with (ycolumns=sensorValueReal, xcolumn=timestamp)\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "178f3108-84f1-43b5-a601-8ba18d561375", "content": "// This KQL query was generated by AI:\n// include sensorId in the summarize results\n//\nSensorData\n| join kind=inner Sensors on sensorId\n| join kind=inner external_table('product') on productId\n| where unit has \"C\"\n| where productType == \"Footwear\"\n| extend sensorValueReal= todouble(sensorValue)\n| summarize maxSensorValue=max(sensorValueReal), minSensorValue=min(sensorValueReal), avgSensorValue=avg(sensorValueReal), countSensorData=count() ", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "a5610291-2e95-45f0-b365-bd6c1414af66", "content": "ZavaCustomerFeedback\n| summarize by feedbacktype\n\nZavaCustomerFeedback\n| summarize by productname\n\nZavaCustomerFeedback\n| summarize by exposurechannel\n\nZavaCustomerFeedback\n| summarize by primaryactivity\n\nZavaCustomerFeedback\n| summarize count() by bin(todatetime(chatdatetime), 1m)\n\nZavaCustomerFeedback\n| order by toreal(initialsentiment) asc\n\nZavaCustomerFeedback\n    | extend initialsentiment = toreal(initialsentiment)\n    | summarize \n        totalFeedback = count(),\n        averageScore = round(avg(initialsentiment), 2)\n        by \n        scoreBucket = bin(initialsentiment, 1),\n        feedbacktype\n    | order by scoreBucket asc\n    | extend scoreBucket = replace_string(tostring(scoreBucket), \".0\", \"\")\n    | project-rename feedbackType=feedbacktype\n\nZavaCustomerFeedback\n    | extend initialsentiment = toreal(initialsentiment)\n    | extend Sentiment =\n        case(\n            initialsentiment >= 0 and initialsentiment < 4, \"Negative\",\n            initialsentiment >= 4 and initialsentiment < 7, \"Neutral\",\n            initialsentiment >= 7 and initialsentiment <= 10, \"Positive\",\n            \"Unknown\"\n        )\n    | where Sentiment != \"Unknown\"\n    | summarize count() by Sentiment, feedbacktype\n\n\nZavaCustomerFeedback\n| take 100\n\nZavaSensors\n| take 100\n\n\nZavaCustomerFeedback\n| summarize avg(toreal(sentiment)) by product\n\nZavaCustomerFeedback\n| where product == \"ProTrainer\"\n\n\nfeedback10mil\n| summarize avg(toreal(sentiment)) by product\n\nfeedback10mil\n| take 100\n\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "2c60f831-ee68-476c-b83e-17496ef6e4fd", "content": "SensorData\n| where unit == \"%\"\n| join kind=inner Sensors on sensorId\n| extend WetVsDry=case(sensorType == \"Humidity\", \"Wet\", \"Dry\")\n| extend EventDateTime = datetime_utc_to_local(EventProcessedUtcTime, 'US/Pacific')\n| where EventDateTime > datetime_utc_to_local(ago(5m),'US/Pacific') \n| project EventDateTime, sensorValue, sensorId,productId, WetVsDry\n| extend sensorValueReal = todouble(sensorValue)\n| extend FabricType = case(productId endswith \"5\" or productId endswith \"6\", \"Suede\", \"Cloth\")\n| summarize avgTemperature=avg(sensorValueReal) by bin(EventDateTime, 1s), WetVsDry, FabricType\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "92cef298-caa7-446c-ab15-354660c4ef60", "content": "// Use 'take' to view a sample number of records in the table and check the data.\nZavaCustomerFeedbackBackup\n| count\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "e71ab58b-7604-4888-9b41-64cb5c5247ca", "content": "//See how many records are in the table.\nZavaCustomerFeedback\n| count\n\n// Use 'take' to view a sample number of records in the table and check the data.\nexternal_table(\"product\")\n| take 100\n\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "4df472c0-bc6b-4e8a-9c20-c1095b4d3873", "content": "\n\n// Use 'take' to view a sample number of records in the table and check the data.\nInventory\n| take 100\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "6cd210bf-4d7f-4bf0-8bae-ef58fcf28cef", "content": "// Use 'take' to view a sample number of records in the table and check the data.\nInventory_data\n| take 100\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}, {"id": "40327d33-7ed9-49f7-8ef4-c748be65272c", "content": "// Use 'take' to view a sample number of records in the table and check the data.\ninventory\n| take 100\n", "title": "", "dataSourceId": "9b5ce950-fa6c-44b2-8772-071ec8866823"}]}}